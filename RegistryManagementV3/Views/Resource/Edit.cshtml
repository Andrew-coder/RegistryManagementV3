@using RegistryManagementV3.Models.Domain
@model Resource

@{
    ViewBag.Title = "Edit";
    <link rel="stylesheet" href="~/Static/Styles/bootstrap-tagsinput.css">
    <script src="~/Static/Scripts/bootstrap-tagsinput.js"></script>
}    

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Resource", FormMethod.Post))
{
    @Html.AntiForgeryToken()
@*     @Html.HiddenFor(model => model.Id) *@
@*     @Html.HiddenFor(model => Model.CatalogId) *@
    <input type="hidden" name="Id" id="Id" value="@Model.Id" />
    <input type="hidden" name="CatalogId" id="CatalogId" value="@Model.CatalogId" />
<div class="form-horizontal">
    <h4>Resource</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => Model.Id)

    @Html.LabelFor(model => Model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.EditorFor(model => Model.Title, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => Model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.EditorFor(model => Model.Description, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => Model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.EditorFor(model => Model.Language, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => Model.Format, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.Format, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => Model.SecurityLevel, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => Model.SecurityLevel, new { htmlAttributes = new { @class = "form-control", min = 1, max = 10 } })
            @Html.ValidationMessageFor(model => Model.SecurityLevel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Catalog_Name">Catalog</label>
        <div class="col-md-10">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.EditorFor(model => Model.Catalog.Name, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    @if (User.IsInRole("Admin"))
    {
        <div class="form-group">
            @Html.LabelFor(model => Model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.EditorFor(model => Model.Priority, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.ResourceStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <span class="label label-default">
                    @Html.Raw(Model.ResourceStatus)
                </span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <input id="tags" name="Tags" value="" data-role="tagsinput" class="form-control"/>
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Зберегти" class="d-inline btn btn-default" />
            <a href=@Url.Action("DownloadResourceDocument", "Resource", new {
                        fileName = Model.Location
                    }) class="d-inline btn btn-info" role="button">Завантажити документ</a>
            @if (User.IsInRole("Admin"))
            {
                if (Model.ResourceStatus != ResourceStatus.Approved)
                {
                    <a href=@Url.Action("ApproveResource", "Admin", new {id = Model.Id}) class="d-inline btn btn-info" role="button">Підтвердити</a>
                }
                else
                {
                    <a href=@Url.Action("ApproveResource", "Admin", new {id = Model.Id}) class="d-inline btn alert-info disabled" role="button">Підтвердити</a>
                }
                <a href="#" class="d-inline btn btn-danger">Видалити ресурс</a>
            }
        </div>

    </div>
</div>
}

<div>
    @Html.ActionLink("Повернутись до реєстру", "Index", "Catalog")
</div>

@section Scripts {
    
    <script type="text/javascript">
        $(document).ready(function() {
            let tags = @Html.Raw(Json.Serialize(Model.Tags.Select(tag => tag.TagValue)));
            $.each(tags, function(index, value) {
                $('#tags').tagsinput('add', value);
                console.log(value);
            });
        });
    </script>
}
