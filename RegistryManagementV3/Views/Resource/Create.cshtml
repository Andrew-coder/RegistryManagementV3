@model RegistryManagementV3.Models.ResourceViewModel

@{
    ViewBag.Title = "Створити ресурс";
    
    <link rel="stylesheet" href="~/Static/Styles/bootstrap-tagsinput.css">
    <script src="~/Static/Scripts/bootstrap-tagsinput.js"></script>
}

<h2>Зареєструвати</h2>

@using (Html.BeginForm("Create", "Resource", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ресурс</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @* @Html.HiddenFor(model => model.Item1.CatalogId, new { Value = Model.Item2 }) *@
            <input type="hidden" name="CatalogId" id="CatalogId" value="@Model.CatalogId" />
            
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Language, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Priority, new {htmlAttributes = new {@class = "form-control", min = 1, max = 10}})
                @Html.ValidationMessageFor(model => model.Priority, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecurityLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecurityLevel, new { htmlAttributes = new { @class = "form-control", min=1, max=10 } })
                @Html.ValidationMessageFor(model => model.SecurityLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <input type="text" value="" data-role="tagsinput" name = "Tags" id="tags" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            @Html.ValidationMessageFor(model => model.ResourceFile)
            <input type="file" name="ResourceFile">
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Створити" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Повернутись до ресурсів", "Index", "Catalog")
</div>

@* @section Scripts { *@
@*     <script src="~/Scripts/selectize.jquery.js"></script> *@
@*     <script src="~/Scripts/selectize.js"></script> *@
@*     <script type="text/javascript"> *@
@*         $(document).ready(function() { *@
@*             $("#select-with-type").selectize({ *@
@*                 delimiter: ',', *@
@*                 persist: false, *@
@*                 placeholder: "Введіть теги", *@
@*                 create: input => { *@
@*                     return { *@
@*                         value: input, *@
@*                         text: input *@
@*                     } *@
@*                 } *@
@*             }); *@
@*         }); *@
@*     </script> *@
@* } *@